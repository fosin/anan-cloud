apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "anan.configmap.name" . }}
  namespace: {{ .Release.Namespace }}
data:
  #环境配置
  mysql.mgr.service.headless: {{ include "anan.service.headless.name" . }}
  mysql.mgr.service: {{ include "anan.service.name" . }}
  anan.tz: {{ include "anan.tz" . | quote }}
  anan.user: {{ include "anan.user" . | quote }}
  mgr.cnf: |
    [client]
    default-character-set=utf8mb4

    [mysql]
    default-character-set=utf8mb4

    [mysqld]
    #datadir=/var/lib/mysql
    #socket=/var/lib/mysql/mysql.sock
    #显示设置timestamp的默认值类型，否则默认为空。
    explicit_defaults_for_timestamp=true
    #SHOW GLOBAL VARIABLES LIKE 'log_timestamps';默认为UTC，修改为SYSTEM
    log_timestamps=SYSTEM
    #不区分大小写
    lower_case_table_names=1
    #skip-grant-tables

    #跳过dns反向解析，避免网络DNS解析服务引发访问MYSQL的错误
    #启用后，在mysql的授权表中就不能使用主机名了，只能使用IP
    skip-name-resolve

    #检测的表对象的最大数目
    performance_schema_max_table_instances=400
    #表定义缓存中表的个数
    table_definition_cache=400
    #表文件描述符的缓存大小
    table_open_cache=256
    max_allowed_packet=32M
    #服务器端和客户端字符集
    #如果character-set-client-handshake为true，就是忽略客户端字符集设置，按照init_connect中的设置进行使用
    character-set-client-handshake=false
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci

    #错误日志文件路径
    log_error=/var/log/mysql/error.log

    #是否开启一般查询日志
    general_log=off
    general_log_file=/var/log/mysql/general.log

    #是否开启慢查询日志
    slow_query_log=on
    slow_query_log_file=/var/log/mysql/slow_query.log

    #MGR组复制设置
    gtid_mode=ON
    enforce_gtid_consistency=ON
    binlog_checksum=NONE

    log_slave_updates=ON
    #启用binlog功能，并指定binlog的存储目录
    log-bin=mysql-bin
    #可选Row、Statement、Mixed
    binlog_format=ROW
    #设置一个binlog文件的最大字节，设置最大 100MB
    max_binlog_size=104857600
    #设置binlog文件的有效期（单位：天）
    expire_logs_days=30
    master_info_repository=TABLE
    relay_log_info_repository=TABLE
    #binlog日志只记录指定库的更新（配置主从复制的时候会用到）
    #binlog-do-db=anan_platform、nacos、exam、grafana
    # binlog 日志不记录指定库的更新（配置主从复制的时候会用到）
    #binlog-ignore-db=mysql
    # 写缓存多少次，刷一次磁盘，默认 0 表示这个操作由操作系统根据自身负载自行决定多久写一次磁盘
    # 1 表示每一条事务提交都会立即写磁盘，n 则表示 n 个事务提交才会写磁盘
    sync_binlog=0

    #server必须为每个事务收集写集合，并使用XXHASH64哈希算法将其编码为散列
    transaction_write_set_extraction=XXHASH64
    #告知插件加入或创建组命名，UUID
    loose-group_replication_group_name="a876d35e-9110-11e6-a365-842b2c590777"

    # 单主模式
    loose-group_replication_single_primary_mode=true
    loose-group_replication_enforce_update_everywhere_checks=false

    {{- $replicaCount := int .Values.statefulset.replicaCount }}
    {{- $headlessName := (include "anan.service.headless.name" .) }}
    {{- $serverPort := (index (index .Values.service.ports 0) "port") }}

    #启动组server，种子server，加入组应该连接这些的ip和端口；其他server要加入组得由组成员同意
    loose-group_replication_group_seeds="
    {{- range $i, $e := until $replicaCount -}}
    {{- if eq $i 0 -}}
    {{- $.Release.Name }}-{{ $i }}.{{ $headlessName }}.{{ $.Release.Namespace }}.svc.cluster.local:33068
    {{- else -}}
    {{- "," }}{{ $.Release.Name }}-{{ $i }}.{{ $headlessName }}.{{ $.Release.Namespace }}.svc.cluster.local:33068
    {{- end }}
    {{- end }}"

    #配置白名单，默认情况下只允许10.244.x.x连接到复制组，如果是其他IP则需要配置。
    loose-group-replication-ip-whitelist="10.244.0.0/16"
    report_port={{ $serverPort }}

    #server启动自启组复制,为了避免每次启动自动引导具有相同名称的第二个组,可以设置为OFF。
    loose-group_replication_start_on_boot=ON
