statefulset:
  updateStrategy:
    type: RollingUpdate
  #并行创建pod,默认为按顺序执行OrderedReady
  podManagementPolicy: OrderedReady
  replicaCount: 1
secret:
  type: Opaque
  confs:
    mysql.root.password: "local"
    mysql.replication.user: "repl"
    mysql.platform.dbname: "anan_platform"
    mysql.platform.user: "anan"
    mysql.platform.password: "local"
    mysql.exam.dbname: "exam"
    mysql.exam.user: "anan"
    mysql.exam.password: "local"
    mysql.nacos.dbname: "nacos"
    mysql.nacos.user: "nacos"
    mysql.nacos.password: "local" #nacos的数据库密码中不能包含逗号(,)，踩了几次坑了😶
    mysql.grafana.dbname: "grafana"
    mysql.grafana.user: "grafana"
    mysql.grafana.password: "local"
initContainers:
  - name: init-mysql
    image: mysql:5.7
    imagePullPolicy: Always
    command:
      - bash
      - "-c"
      - |
        set -ex

        # 从config-map中复制配置文件到emptyDir，因为config-map目录为只读
        cp /etc/mysql/mgr.cnf /etc/mysql/conf.d/mgr.cnf

        # 从Pod序号生成server-id, =~ 判断字符串包含关系，BASH_REMATCH变量存储匹配结果
        [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
        export POD_NUMBER=${BASH_REMATCH[1]}

        echo -e "server_id=$((1 + $POD_NUMBER))" >> /etc/mysql/conf.d/mgr.cnf
        # #告诉插件使用IP地址，端口33068用于接收组中其他成员转入连接
        echo -e "loose-group_replication_local_address=\"`hostname`.`echo $MY_POD_SERVICE_HEADLESS`.`echo $MY_POD_NAMESPACE`.svc.cluster.local:33068\"" >> /etc/mysql/conf.d/mgr.cnf
        echo -e "report_host=\"`hostname`.`echo $MY_POD_SERVICE_HEADLESS`.`echo $MY_POD_NAMESPACE`.svc.cluster.local\"" >> /etc/mysql/conf.d/mgr.cnf

        #配置是否自动引导组
        if [[ $POD_NUMBER == 0 ]]; then
          echo -e "loose-group_replication_bootstrap_group=ON" >> /etc/mysql/conf.d/mgr.cnf
        else
          echo -e "loose-group_replication_bootstrap_group=OFF" >> /etc/mysql/conf.d/mgr.cnf
        fi
    env:
      - name: MY_POD_SERVICE_HEADLESS
        valueFrom:
          configMapKeyRef:
            name: mysql-mgr
            key: mysql.mgr.service.headless
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    volumeMounts:
      - name: mysql-mgr
        mountPath: /etc/mysql/
      - name: temp
        mountPath: /etc/mysql/conf.d/
containers:
  - image: mysql:5.7
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 1m
        memory: 256Mi
    env:
      - name: TZ
        value: Asia/Shanghai
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-mgr
            key: mysql.root.password
    readinessProbe:
      periodSeconds: 45
      failureThreshold: 3
      exec:
        command:
          - /bin/sh
          - "-c"
          - MYSQL_PWD="${MYSQL_ROOT_PASSWORD}"
          - mysql -u root -e "SELECT 1"
    livenessProbe:
      periodSeconds: 60
      failureThreshold: 2
      exec:
        command:
          - /bin/sh
          - "-c"
          - MYSQL_PWD="${MYSQL_ROOT_PASSWORD}"
          - mysql -u root -e "SELECT 1"
    volumeMounts:
      - name: data
        mountPath: /var/lib/mysql
      - name: log
        mountPath: /var/log/mysql
      - name: temp
        mountPath: /etc/mysql/conf.d/
volumes:
  - name: temp
    emptyDir: {}
  - name: mysql-mgr
    configMap:
      name: mysql-mgr
      items:
        - key: mgr.cnf
          path: mgr.cnf
persistence:
  - name: data
    storageClassName: local-storage
    size: 2G
    accessMode: ReadWriteOnce
    mountPath: /var/lib/mysql
    local:
      - hostname: examtest0
        path: /data/mysql-mgr0
  - name: log
    storageClassName: local-storage
    size: 2G
    accessMode: ReadWriteOnce
    mountPath: /var/log/mysql
    local:
      - hostname: examtest0
        path: /data/logs/mysql-mgr0
service:
  type: NodePort
  ports:
    - port: 3306
      name: server
