global:
  scrape_interval: 1m
  evaluation_interval: 1m
  external_labels:
    monitor: 'promk8s'

rule_files:
  - '/etc/alert-rules/*.yml'

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager-0.alertmanager-headless:9093
            - alertmanager-1.alertmanager-headless:9093
            - alertmanager-2.alertmanager-headless:9093

scrape_configs:
  - job_name: 'prometheus'
    metrics_path: /prometheus/metrics
    static_configs:
      - targets: ['localhost:9090']

  #监控node方式1（node-exporter方式）
  - job_name: node
    # metrics_path: /node-exporter/metrics
    static_configs:
      - targets: ['node-exporter-0.node-exporter-headless:9100']
        labels:
          instance: examtest0
      - targets: ['node-exporter-1.node-exporter-headless:9100']
        labels:
          instance: exam1
      - targets: ['node-exporter-2.node-exporter-headless:9100']
        labels:
          instance: exam2

  #监控node方式2（apiserver方式）
  - job_name: 'apiserver->nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  #监控node方式3：通过api-server提供的代理地址访问kubelet的/metrics/cadvisor地址
  - job_name: 'apiserver->kubelet->cadvisor->node'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  #通过apiserver监控k8s中的endpoints
  - job_name: 'apiserver->endpoints'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels:
          [
            __meta_kubernetes_namespace,
            __meta_kubernetes_service_name,
            __meta_kubernetes_endpoint_port_name,
          ]
        action: keep
        regex: default;kubernetes;https
      - target_label: __address__
        replacement: kubernetes.default.svc:443

  #通过apiserver监控k8s中的services
  - job_name: 'apiserver->services'
    # metrics_path: /probe
    params:
      module: [http_2xx]
    kubernetes_sd_configs:
      - role: service
    relabel_configs:
      # - source_labels:
      #     [__meta_kubernetes_service_annotation_prometheus_io_probe]
      #   action: keep
      #   regex: true
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_name

  #通过apiserver监控k8s中的ingress
  - job_name: 'apiserver->ingresses'
    # metrics_path: /probe
    params:
      module: [http_2xx]
    kubernetes_sd_configs:
      - role: ingress
    relabel_configs:
      # - source_labels:
      #     [__meta_kubernetes_ingress_annotation_prometheus_io_probe]
      #   action: keep
      #   regex: true
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - action: labelmap
        regex: __meta_kubernetes_ingress_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_ingress_name]
        target_label: kubernetes_name
