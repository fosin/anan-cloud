statefulset:
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
  #滚动升级时60s后认为该pod就绪
  minReadySeconds: 45
terminationGracePeriodSeconds: 15 #优雅关闭pod的等待时间，默认30s
containers:
  - image: prom/prometheus:latest
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        memory: 768Mi
      requests:
        cpu: 1m
        memory: 256Mi
    readinessProbe:
      httpGet:
        path: /prometheus/-/ready
        port: http
      periodSeconds: 45
      failureThreshold: 2
    livenessProbe:
      httpGet:
        path: /prometheus/-/healthy
        port: http
      periodSeconds: 60
      failureThreshold: 2
    securityContext:
      runAsUser: 0
    args:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=3d'
      - '--web.external-url=prometheus'
      - '--web.enable-lifecycle'
      #- '--webhook-url=http://localhost:9090/prometheus/-/reload'
    env:
      - name: TZ
        value: Asia/Shanghai
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
persistence:
- name: data
  size: 10G
  mountPath: /prometheus
  accessMode: ReadWriteOnce
  nfs:
    - server: 100.100.1.196
      path: /data/nfs/prometheus
    # - server: 100.100.1.197
    #   path: /data/nfs/prometheus
    # - server: 100.100.1.198
    #   path: /data/nfs/prometheus
service:
  type: NodePort
  ports:
    - port: 9090
      name: http
configmap:
  - mountPath: /etc/prometheus
    fromFiles:
      prometheus.yml: "conf/prometheus.yml"
  - mountPath: /etc/alert-rules
    name: prometheus-alert-rules
    fromDirs:
      - conf/rules/**
cluster:
  role:
    rules:
      - apiGroups: [""]
        resources:
        - nodes
        - nodes/proxy
        - services
        - endpoints
        - pods
        verbs: ["get", "list", "watch"]
      - apiGroups:
        - "networking.k8s.io"
        resources:
        - ingresses
        verbs: ["get", "list", "watch"]
      - nonResourceURLs: ["/metrics"]
        verbs: ["get"]
