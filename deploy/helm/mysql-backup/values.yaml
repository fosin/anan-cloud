cronjob:
  schedule: "0 13 * * 5" #每周五9点备份
  startingDeadlineSeconds: 30 #每次运行 Job 的时候，它最长可以等多长时间，有时这个 Job 可能运行很长时间也不会启动。所以这时，如果超过较长时间的话，CronJob 就会停止这个 Job；
  concurrencyPolicy: Forbid #否允许并行运行。所谓的并行运行就是，比如说我每分钟执行一次，但是这个 Job 可能运行的时间特别长，假如两分钟才能运行成功，也就是第二个 Job 要到时间需要去运行的时候，上一个 Job 还没完成。如果这个 policy 设置为 true 的话，那么不管你前面的 Job 是否运行完成，每分钟都会去执行；如果是 false，它就会等上一个 Job 运行完成之后才会运行下一个；
  successfulJobsHistoryLimit: 52 #每一次 CronJob 运行完之后，它都会遗留上一个 Job 的运行历史、查看时间。
  failedJobsHistoryLimit: 52 #失败运行历史、查看时间。
  parallelism: 1 #并行执行的Pod个数
  completions: 1 #指定每个Pod队列执行次数
  backoffLimit: 1 #失败重试次数限制
restartPolicy: Never #Pod重启策略：Always、OnFailure 和 Never。CronJob不支持Always。
containers:
  - image: mysql:8.0
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 1m
        memory: 256Mi
    env:
      - name: TZ
        value: Asia/Shanghai
      - name: MYSQL_NACOS_USER
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.nacos.user
      - name: MYSQL_NACOS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.nacos.password
      - name: MYSQL_PLATFORM_USER
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.platform.user
      - name: MYSQL_PLATFORM_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.platform.password
      - name: MYSQL_EXAM_USER
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.exam.user
      - name: MYSQL_EXAM_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.exam.password
      - name: MYSQL_GRAFANA_USER
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.grafana.user
      - name: MYSQL_GRAFANA_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-cluster
            key: mysql.grafana.password
      - name: MYSQL_SERVICE
        valueFrom:
          configMapKeyRef:
            name: mysql-cluster
            key: mysql.service
      - name: MYSQL_SERVICE_PORT_READONLY
        valueFrom:
          configMapKeyRef:
            name: mysql-cluster
            key: mysql.service.port.readonly
    command:
      - /bin/sh
      - -c
      - |
        set -ex
        echo "start dump mysql data...."
        NOW=`date +%Y%m%d%H%M`
        DIR=/backup/`date +%Y%m%d`
        if [ ! -d "$DIR" ]
         then
        mkdir -p $DIR
        fi
        mysqldump -h$MYSQL_SERVICE -P$MYSQL_SERVICE_PORT_READONLY -u$MYSQL_NACOS_USER -p$MYSQL_NACOS_PASSWORD --databases nacos > $DIR/nacos$NOW.sql
        mysqldump -h$MYSQL_SERVICE -P$MYSQL_SERVICE_PORT_READONLY -u$MYSQL_PLATFORM_USER -p$MYSQL_PLATFORM_PASSWORD --databases anan_platform > $DIR/anan_platform$NOW.sql
        mysqldump -h$MYSQL_SERVICE -P$MYSQL_SERVICE_PORT_READONLY -u$MYSQL_EXAM_USER -p$MYSQL_EXAM_PASSWORD --databases exam > $DIR/exam$NOW.sql
        mysqldump -h$MYSQL_SERVICE -P$MYSQL_SERVICE_PORT_READONLY -u$MYSQL_GRAFANA_USER -p$MYSQL_GRAFANA_PASSWORD --databases grafana > $DIR/grafana$NOW.sql
        echo "end dump mysql data...."
persistence:
  - name: data
    size: 10G
    mountPath: /backup
    accessMode: ReadWriteOnce
    nfs:
      - server: 172.16.1.208
        path: /data/nfs/backup/mysql
