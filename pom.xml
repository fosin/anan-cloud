<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>top.fosin.anan</groupId>
        <artifactId>anan-boot-starter</artifactId>
        <version>4.0.0-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <artifactId>anan-cloud</artifactId>
    <version>5.0.0-SNAPSHOT</version>
    <modules>
        <module>anan-eurekaserver</module>
        <module>anan-cloudadviced</module>
        <module>anan-cloudgateway</module>
        <module>anan-configserver</module>
        <module>anan-cloudresource</module>
    </modules>
    <properties>
        <revision>5.0.0-SNAPSHOT</revision>
        <anan-placeholder1>${</anan-placeholder1>
        <anan-placeholder2>}</anan-placeholder2>
        <anan-spring-cloud.version>2022.0.5</anan-spring-cloud.version>
        <anan-spring-cloud-alibaba.version>2022.0.0.0</anan-spring-cloud-alibaba.version>
        <anan-spring-cloud-zipkin.version>2.2.8.RELEASE</anan-spring-cloud-zipkin.version>
        <anan-spring-boot-admin.version>3.1.8</anan-spring-boot-admin.version>
        <anan-spring-boot-jasypt.version>3.0.5</anan-spring-boot-jasypt.version>
        <anan-druid-boot.version>1.1.23</anan-druid-boot.version>
        <sonar.host.url>http://192.168.137.8:9001/</sonar.host.url>
        <anan-grpc-boot.version>3.0.0.RELEASE</anan-grpc-boot.version>
        <grpc.version>1.58.0</grpc.version>
        <protobuf.version>3.24.0</protobuf.version>
        <protobuf-plugin.version>0.6.1</protobuf-plugin.version>
        <springdoc.version>2.2.0</springdoc.version>
        <java.version>17</java.version>
    </properties>
    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <profileActive>local</profileActive>
                <jasypt.encryptor.algorithm>PBEWithMD5AndDES</jasypt.encryptor.algorithm>
                <jasypt.encryptor.iv-generator-classname>org.jasypt.iv.NoIvGenerator</jasypt.encryptor.iv-generator-classname>
                <jasypt.encryptor.password>oF7tVrdfjrbQ0NfSsRL3</jasypt.encryptor.password>
                <spring.cloud.kubernetes.discovery.enabled>false</spring.cloud.kubernetes.discovery.enabled>
                <spring.cloud.kubernetes.config.enabled>false</spring.cloud.kubernetes.config.enabled>
                <spring.cloud.kubernetes.secrets.enabled>false</spring.cloud.kubernetes.secrets.enabled>
                <spring.cloud.kubernetes.namespace>default</spring.cloud.kubernetes.namespace>
                <spring.cloud.kubernetes.sharedConfigMap>application</spring.cloud.kubernetes.sharedConfigMap>
                <spring.cloud.kubernetes.sharedSecret>application</spring.cloud.kubernetes.sharedSecret>
                <spring.cloud.nacos.enabled>true</spring.cloud.nacos.enabled>
                <spring.cloud.nacos.username>nacos</spring.cloud.nacos.username>
                <spring.cloud.nacos.password>local</spring.cloud.nacos.password>
                <spring.cloud.nacos.server-addr>nacos:8848</spring.cloud.nacos.server-addr>
                <spring.cloud.nacos.namespace>local</spring.cloud.nacos.namespace>
                <spring.cloud.nacos.sharedConfigs>application.yaml</spring.cloud.nacos.sharedConfigs>
                <eureka.client.enabled>false</eureka.client.enabled>
                <eureka.client.service-url.defaultZone>
                    http://${anan-placeholder1}spring.security.user.name${anan-placeholder2}:${anan-placeholder1}spring.security.user.password${anan-placeholder2}${anan-at}anan-eurekaserver:6100/eureka/
                </eureka.client.service-url.defaultZone>
                <spring.cloud.config.enabled>false</spring.cloud.config.enabled>
                <spring.cloud.config.profileActive>native</spring.cloud.config.profileActive>
                <spring.cloud.config.server.svn.uri/>
                <spring.cloud.config.server.svn.username/>
                <spring.cloud.config.server.svn.password/>
                <spring.cloud.config.server.native.search-locations>file:deploy/anan-conf
                </spring.cloud.config.server.native.search-locations>
                <spring.cloud.config.server.git.uri>https://github.com/fosin/anan-cloud/deploy
                </spring.cloud.config.server.git.uri>
                <spring.cloud.config.server.git.search-paths>anan-conf</spring.cloud.config.server.git.search-paths>
                <!--TODO 这里启用加密后除anan-eurekaserver、anan-configserver之外的应用都无法解密
                <spring.security.user.name>'{cipher}AQAGy3LYSBkcOJA32VA/mT3jNtxscWGe0Eto3isApxPrUgv00Pw0629LROM3zCh9KC3/HqP4aoUexyBw3QhdLCkXr6zpXGFrj0x7EPcu+A9B9kbzZejfcdG3l+Wln+chjS50cLe0txPDt4ioZxbLb0BjgwfPS4THrIfozhJgyRKNwkrw4prTXSnE2o/tbo/rHKJutXF53ywkAqRK7sZNFUMiHZTKiQkKzzCTUQmFRoBYkYtoc2SjVMerEfySCyx8oEm0+FnLpUuFpexO/cVl/YbWxmeU4qvrpeDgj1OEJ9JAuKZGfSHF/1LdvaOP7HVlx1EiyqLoQys/pa1vFjkRu8YHSmSS7jOfiGty2sT3g4+fFG7G0K+8g5cmRGAUbhUppDI='</spring.security.user.name>
                <spring.security.user.password>'{cipher}AQAf9K0s8zLVaIk44+wqpHGuHsHEK5G4KKu1vk0HwxlojaYQHRkNsFhdQwmcrnkayWpGmNZezJCVb56JJTYL0wOus7L+zUIRWG0YIBzZBzG0iAX/6fQ0l7EVc6JyYmksGi6czSWhhAYvaJ2zupxU5pMou+k48ILP1MSZ+2n/mmM2OA/msXzum7hhSbuHKHkazorFlYLem2efeU0M61xWGRgzHAJ6pOxWGJx2NepgFDGLSTpDiqRTXD98AabHa28X8TpBbFynDONrU3mueuW/TSrXOlzp2LOO/cDbYGpZXAc/jypbH8SWfkSQlQrWaKBg2FJ8DYg/hUnxfSy+QbzyeGkPfJAcrDZ+9lhluKJ2RplT9bAedAWmvzPu2cJCQuf/RmM='</spring.security.user.password>-->
                <spring.security.user.name>anan</spring.security.user.name>
                <spring.security.user.password>local</spring.security.user.password>
                <encrypt.key-store.location>classpath:/anan.jks</encrypt.key-store.location>
                <encrypt.key-store.password>123456</encrypt.key-store.password>
                <encrypt.key-store.alias>anan</encrypt.key-store.alias>
                <encrypt.key-store.secret>123456</encrypt.key-store.secret>
                <encrypt.key-store.type>jks</encrypt.key-store.type>
                <docker.register.url>registry.cn-hongkong.aliyuncs.com/fosin</docker.register.url>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <profileActive>dev</profileActive>
                <jasypt.encryptor.algorithm>PBEWithMD5AndDES</jasypt.encryptor.algorithm>
                <jasypt.encryptor.iv-generator-classname>org.jasypt.iv.NoIvGenerator</jasypt.encryptor.iv-generator-classname>
                <jasypt.encryptor.password>oF7tVrdfjrbQ0NfSsRL3</jasypt.encryptor.password>
                <spring.cloud.kubernetes.discovery.enabled>false</spring.cloud.kubernetes.discovery.enabled>
                <spring.cloud.kubernetes.config.enabled>false</spring.cloud.kubernetes.config.enabled>
                <spring.cloud.kubernetes.secrets.enabled>false</spring.cloud.kubernetes.secrets.enabled>
                <spring.cloud.kubernetes.namespace>default</spring.cloud.kubernetes.namespace>
                <spring.cloud.kubernetes.sharedConfigMap>application</spring.cloud.kubernetes.sharedConfigMap>
                <spring.cloud.kubernetes.sharedSecret>application</spring.cloud.kubernetes.sharedSecret>
                <spring.cloud.nacos.enabled>true</spring.cloud.nacos.enabled>
                <spring.cloud.nacos.username>nacos</spring.cloud.nacos.username>
                <spring.cloud.nacos.password>local</spring.cloud.nacos.password>
                <spring.cloud.nacos.server-addr>nacos:8848</spring.cloud.nacos.server-addr>
                <spring.cloud.nacos.namespace>dev</spring.cloud.nacos.namespace>
                <spring.cloud.nacos.sharedConfigs>application.yaml</spring.cloud.nacos.sharedConfigs>
                <eureka.client.enabled>false</eureka.client.enabled>
                <eureka.client.service-url.defaultZone>
                    http://${anan-placeholder1}spring.security.user.name${anan-placeholder2}:${anan-placeholder1}spring.security.user.password${anan-placeholder2}${anan-at}localhost:6100/eureka/
                </eureka.client.service-url.defaultZone>
                <spring.cloud.config.enabled>false</spring.cloud.config.enabled>
                <spring.cloud.config.profileActive>native</spring.cloud.config.profileActive>
                <spring.cloud.config.server.svn.uri/>
                <spring.cloud.config.server.svn.username/>
                <spring.cloud.config.server.svn.password/>
                <spring.cloud.config.server.native.search-locations>file:deploy/anan-conf
                </spring.cloud.config.server.native.search-locations>
                <spring.cloud.config.server.git.uri/>
                <spring.cloud.config.server.git.search-paths/>
                <spring.security.user.name>anan</spring.security.user.name>
                <spring.security.user.password>local</spring.security.user.password>
                <encrypt.key-store.location>classpath:/anan.jks</encrypt.key-store.location>
                <encrypt.key-store.password>123456</encrypt.key-store.password>
                <encrypt.key-store.alias>anan</encrypt.key-store.alias>
                <encrypt.key-store.secret>123456</encrypt.key-store.secret>
                <encrypt.key-store.type>jks</encrypt.key-store.type>
                <docker.register.url>registry.cn-hongkong.aliyuncs.com/fosin</docker.register.url>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profileActive>prod</profileActive>
                <jasypt.encryptor.algorithm>PBEWithMD5AndDES</jasypt.encryptor.algorithm>
                <jasypt.encryptor.iv-generator-classname>org.jasypt.iv.NoIvGenerator</jasypt.encryptor.iv-generator-classname>
                <jasypt.encryptor.password>oF7tVrdfjrbQ0NfSsRL3</jasypt.encryptor.password>
                <spring.cloud.kubernetes.discovery.enabled>true</spring.cloud.kubernetes.discovery.enabled>
                <spring.cloud.kubernetes.config.enabled>true</spring.cloud.kubernetes.config.enabled>
                <spring.cloud.kubernetes.secrets.enabled>false</spring.cloud.kubernetes.secrets.enabled>
                <spring.cloud.kubernetes.namespace>default</spring.cloud.kubernetes.namespace>
                <spring.cloud.kubernetes.sharedConfigMap>application</spring.cloud.kubernetes.sharedConfigMap>
                <spring.cloud.kubernetes.sharedSecret>application</spring.cloud.kubernetes.sharedSecret>
                <spring.cloud.nacos.enabled>true</spring.cloud.nacos.enabled>
                <spring.cloud.nacos.username>nacos</spring.cloud.nacos.username>
                <spring.cloud.nacos.password>prod</spring.cloud.nacos.password>
                <spring.cloud.nacos.server-addr>nacos:8848,nacos-1:8848
                </spring.cloud.nacos.server-addr>
                <spring.cloud.nacos.namespace>prod
                </spring.cloud.nacos.namespace>
                <spring.cloud.nacos.sharedConfigs>application.yaml</spring.cloud.nacos.sharedConfigs>
                <eureka.client.enabled>false</eureka.client.enabled>
                <eureka.client.service-url.defaultZone>
                    http://${anan-placeholder1}spring.security.user.name${anan-placeholder2}:${anan-placeholder1}spring.security.user.password${anan-placeholder2}${anan-at}anan-eurekaserver1:6100/eureka/,http://${anan-placeholder1}spring.security.user.name${anan-placeholder2}:${anan-placeholder1}spring.security.user.password${anan-placeholder2}${anan-at}anan-eurekaserver2:6100/eureka/
                </eureka.client.service-url.defaultZone>
                <spring.cloud.config.enabled>false</spring.cloud.config.enabled>
                <spring.cloud.config.profileActive>native</spring.cloud.config.profileActive>
                <spring.cloud.config.server.svn.uri/>
                <spring.cloud.config.server.svn.username/>
                <spring.cloud.config.server.svn.password/>
                <spring.cloud.config.server.native.search-locations>file:/anan-conf/@profileActive@
                </spring.cloud.config.server.native.search-locations>
                <spring.cloud.config.server.git.uri/>
                <spring.cloud.config.server.git.search-paths/>
                <spring.security.user.name>anan</spring.security.user.name>
                <spring.security.user.password>prod</spring.security.user.password>
                <encrypt.key-store.location>classpath:/anan.jks</encrypt.key-store.location>
                <encrypt.key-store.password>123456</encrypt.key-store.password>
                <encrypt.key-store.alias>anan</encrypt.key-store.alias>
                <encrypt.key-store.secret>123456</encrypt.key-store.secret>
                <encrypt.key-store.type>jks</encrypt.key-store.type>
                <docker.register.url>registry.cn-hongkong.aliyuncs.com/fosin</docker.register.url>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes-fabric8-all</artifactId>
        </dependency>
        <!--增加解决报错：No spring.config.import property has been defined-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.4.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>
        <!--spring-cloud-starter-loadbalancer的缓存用-->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${anan-spring-boot-admin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
                <!--grpc框架3.0.0依赖springboot3.2，需要升级到1.12.2才不会报错-->
                <exclusion>
                        <groupId>io.micrometer</groupId>
                        <artifactId>micrometer-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>1.12.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--spring boot 项目引入了 spring的devtools 会产生java.lang.ClassCastException 两个一样的类不能强转
        java.lang.ClassCastException: class top.fosin.anan.pojo.dto.AnanUserDetail cannot be
        cast to class top.fosin.anan.pojo.dto.AnanUserDetail (top.fosin.anan.pojo.dto.
        AnanUserDetail is in unnamed module of loader 'app'; top.fosin.anan.pojo.dto.
        AnanUserDetail is in unnamed module of loader org.springframework.boot.devtools.restart.
        classloader.RestartClassLoader @37b70696) at top.fosin.anan.auth.security.
        AnanTokenServices.createAccessToken(AnanTokenServices.java:53)
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
            <scope>runtime</scope>
        </dependency>-->
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>top.fosin.anan</groupId>
                <artifactId>anan-cloudresource</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${anan-spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${anan-spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${anan-druid-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${anan-spring-boot-admin.version}</version>
            </dependency>
            <!--版本升级到3.x启动应用报错-->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${anan-spring-boot-jasypt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-zipkin</artifactId>
                <version>${anan-spring-cloud-zipkin.version}</version>
            </dependency>
            <dependency>
                <groupId>net.devh</groupId>
                <artifactId>grpc-server-spring-boot-starter</artifactId>
                <version>${anan-grpc-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>net.devh</groupId>
                <artifactId>grpc-client-spring-boot-starter</artifactId>
                <version>${anan-grpc-boot.version}</version>
            </dependency>
            <!-- gRPC bom -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.0</version>
            </extension>
        </extensions>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>application*.properties</exclude>
                    <exclude>application*.yml</exclude>
                    <exclude>bootstrap*.properties</exclude>
                    <exclude>bootstrap*.yml</exclude>
                </excludes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>application-${profileActive}*.yml</include>
                    <include>application.yml</include>
                    <include>bootstrap-${profileActive}*.yml</include>
                    <include>bootstrap.yml</include>
                    <include>application-${profileActive}*.properties</include>
                    <include>application.properties</include>
                    <include>bootstrap-${profileActive}*.properties</include>
                    <include>bootstrap.properties</include>
                </includes>
            </resource>
        </resources>
        <finalName>${project.artifactId}-${project.version}-${profileActive}</finalName>
        <!--   <filters>
               <filter>${basedir}/anan-conf/application-${profileActive}.properties</filter>
           </filters>-->
        <plugins>
            <!--SpringBoot插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>top.fosin.anan</groupId>
                            <artifactId>anan-cloud</artifactId>
                        </exclude>
                        <exclude>
                            <groupId>top.fosin.anan</groupId>
                            <artifactId>anan-cloudresource</artifactId>
                        </exclude>
                    </excludes>
                    <!--<skip>true</skip> 默认跳过repackage-->
                    <executable>true</executable>
                    <!--以下内容用于外置化依赖jar包-->
                    <layout>ZIP</layout>
                    <includes>
                        <include>
                            <groupId>nothing</groupId>
                            <artifactId>nothing</artifactId>
                        </include>
                    </includes>
                </configuration>
            </plugin>
            <!--Docker自动发布插件-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>
                <!--package作用域不包含build和push-->
                <!-- <executions>
                     <execution>
                         <id>default</id>
                         <phase>package</phase>
                         <goals>
                             <goal>build</goal>
                             <goal>push</goal>
                         </goals>
                     </execution>
                 </executions>-->
                <configuration>
                    <contextDirectory>${project.basedir}</contextDirectory>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    <repository>${docker.register.url}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <dockerfile>Dockerfile</dockerfile>
                    <buildArgs>
                        <jarFile>target/${project.build.finalName}.jar</jarFile>
                        <profileActive>${profileActive}</profileActive>
                    </buildArgs>
                </configuration>
            </plugin>
            <!-- 资源文件拷贝插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!--需要制定版本，否则使用3.2.0会报错org.apache.maven.plugin.MojoExecutionException: Input length = 1-->
               <!-- <version>3.1.0</version>-->
                <configuration>
                    <!-- <propertiesEncoding>UTF-8</propertiesEncoding>-->
                    <encoding>UTF-8</encoding>
                    <!--不过滤以下后缀的文件-->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                        <nonFilteredFileExtension>html</nonFilteredFileExtension>
                        <nonFilteredFileExtension>js</nonFilteredFileExtension>
                        <nonFilteredFileExtension>css</nonFilteredFileExtension>
                        <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                        <nonFilteredFileExtension>png</nonFilteredFileExtension>
                        <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
                        <nonFilteredFileExtension>jepg</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                        <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                        <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                        <nonFilteredFileExtension>map</nonFilteredFileExtension>
                        <nonFilteredFileExtension>less</nonFilteredFileExtension>
                        <nonFilteredFileExtension>json</nonFilteredFileExtension>
                        <nonFilteredFileExtension>scss</nonFilteredFileExtension>
                        <nonFilteredFileExtension>sql</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${protobuf-plugin.version}</version>
                    <configuration>
                        <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                        <!--默认值，proto源文件路径-->
                        <protoSourceRoot>${project.basedir}/src/main/proto</protoSourceRoot>
                        <!--默认值，proto目标java文件路径-->
                        <outputDirectory>${project.basedir}/src/main/java</outputDirectory>
                        <!--设置是否在生成java文件之前清空outputDirectory的文件，默认值为true，设置为false时也会覆盖同名文件-->
                        <clearOutputDirectory>false</clearOutputDirectory>
                    </configuration>
                    <!--
                    不把编译命令自动添加到编译命令中，执行compile命令时不会执行GRPC Java文件生成命令
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                            </goals>
                        </execution>
                    </executions>-->
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
