name: anan-cloud Branches CI
on:
  push:
    branches:
      - '*'
    paths:
      - 'pom.xml'
      - 'anan-cloudresource/**'
      - 'anan-cloudadviced/**'
      - 'deploy/mysql/**'
      - 'deploy/openjdk/**'
      - 'anan-configserver/**'
      - 'anan-eurekaserver/**'
      - '.github/workflows/anan-cloud-branches.yml'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      #从11位截取GITHUB_REF变量中的分支号，例如:refs/heads/master，结果就是master
      - name: Set GITHUB_REF
        run: |
          echo BRANCHE_VERSION=$(echo ${GITHUB_REF:11}) >> $GITHUB_ENV
          echo DOCKER_MIRROR_SERVER=registry.cn-hongkong.aliyuncs.com >> $GITHUB_ENV
          echo DOCKER_MIRROR_NS=fosin >> $GITHUB_ENV
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCHE_VERSION }}
          fetch-depth: 3

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set Build Modules
        run: |
          MODIFY_FILES=$(git diff --name-only HEAD~1 HEAD)
          MODULES=""
          echo MODIFY_FILES: $MODIFY_FILES
          if [[ $MODIFY_FILES =~ "\npom.xml" || $MODIFY_FILES =~ "^pom.xml" || $MODIFY_FILES =~ " pom.xml" ]]; then
             MODULES=${MODULES}",top.fosin.anan:anan-cloud"
          fi
          if [[ $MODIFY_FILES =~ "anan-cloudresource" ]]; then
             MODULES=${MODULES}",top.fosin.anan:anan-cloudresource"
          fi
          if [[ $MODIFY_FILES =~ "anan-cloudadviced/pom.xml" ]]; then
            MODULES=${MODULES}",top.fosin.anan:anan-cloudadviced"
          fi
          echo MODIFY_FILES=$MODIFY_FILES >> $GITHUB_ENV
          echo MODULE_LIST=${MODULES:1} >> $GITHUB_ENV
          echo MODULES: ${MODULES}
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        if: env.MODULE_LIST != ''
        with:
          #gpg_private_key: ${{ secrets.gpg_private_key }}
          #gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.center_nexus_username }}
          nexus_password: ${{ secrets.center_nexus_password }}
          #directory: "."
          maven_profiles: "sonatype-oss-release"
          maven_goals_phases: "clean package deploy:deploy"
          maven_args: "-Dmaven.javadoc.skip=true -pl ${{ env.MODULE_LIST }}"
          server_id: "sonatype-nexus-snapshots"
      - name: Docker Hub Login
        run: |
          docker login --username=${{ secrets.alidocker_username }} --password=${{ secrets.alidocker_secrect }} ${{ env.DOCKER_MIRROR_SERVER }}
      # 创建openjdk-11-ubuntu-openj9镜像
      - name: Docker build and push openjdk-11-ubuntu-openj9
        if: contains(env.MODIFY_FILES,'deploy/openjdk/11-openj9.Dockerfile') || contains(env.MODIFY_FILES,'entrypoint.sh') || contains(env.MODIFY_FILES,'sources.list')
        run: |
          MODULE_PATH=deploy/openjdk
          MODULE_NAME=adoptopenjdk
          MODULE_VERSION=11-ubuntu-openj9
          docker build $MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f $MODULE_PATH/11-openj9.Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      # 创建jdk11-ubuntu-hotspot镜像
      - name: Docker build and push openjdk11-ubuntu-hotspot
        if: contains(env.MODIFY_FILES,'deploy/openjdk/11-ubuntu.Dockerfile') || contains(env.MODIFY_FILES,'entrypoint.sh') || contains(env.MODIFY_FILES,'sources.list')
        run: |
          MODULE_PATH=deploy/openjdk
          MODULE_NAME=eclipse-temurin
          MODULE_VERSION=11-ubuntu-hotspot
          docker build $MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f $MODULE_PATH/11-ubuntu.Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      # 创建jdk11-centos7-hotspot镜像
      - name: Docker build and push jdk11-centos7-hotspot
        if: contains(env.MODIFY_FILES,'deploy/openjdk/11-centos7.Dockerfile') || contains(env.MODIFY_FILES,'entrypoint.sh') || contains(env.MODIFY_FILES,'sources.list')
        run: |
          MODULE_PATH=deploy/openjdk
          MODULE_NAME=eclipse-temurin
          MODULE_VERSION=11-centos7-hotspot
          docker build $MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f $MODULE_PATH/11-centos7.Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION

      # Maven构建jar包
      - name: Build with Maven
        if: contains(env.MODIFY_FILES,'anan-cloudadviced/') || contains(env.MODIFY_FILES,'anan-cloudresource/') || contains(env.MODIFY_FILES,'anan-configserver/') || contains(env.MODIFY_FILES,'anan-eurekaserver/')
        run: |
          mvn --batch-mode --errors --file pom.xml clean dependency:copy-dependencies -DincludeScope=runtime compile jar:jar spring-boot:repackage
          echo ANAN_VERSION=$(grep 'version=' target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }') >> $GITHUB_ENV

      - name: Docker build and push mysql-leader
        if: contains(env.MODIFY_FILES,'deploy/mysql/leader')
        run: |
          MODULE_PATH=deploy/mysql/leader
          MODULE_NAME=mysql-leader
          MODULE_VERSION=2.7
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/7.Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      - name: Docker build and push mysql-follower
        if: contains(env.MODIFY_FILES,'deploy/mysql/follower')
        run: |
          MODULE_PATH=deploy/mysql/follower
          MODULE_NAME=mysql-follower
          MODULE_VERSION=2.7
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/7.Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION

      # 创建anan-authserver
      - name: Docker build and push anan-authserver
        if: contains(env.MODIFY_FILES,'anan-cloudadviced/anan-authserver/') || contains(env.MODIFY_FILES,'anan-cloudadviced/pom.xml') || contains(env.MODIFY_FILES,'anan-cloudadviced/anan-cloudresource/') || contains(env.MODULE_LIST,'anan-cloud')
        run: |
          MODULE_PATH=anan-cloudadviced/anan-authserver
          MODULE_NAME=$(grep 'artifactId=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          MODULE_VERSION=$(grep 'version=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      # 创建anan-platformserver
      - name: Docker build and push anan-platformserver
        if: contains(env.MODIFY_FILES,'anan-cloudadviced/anan-platformserver/') || contains(env.MODIFY_FILES,'anan-cloudadviced/pom.xml') || contains(env.MODIFY_FILES,'anan-cloudadviced/anan-cloudresource/') || contains(env.MODULE_LIST,'anan-cloud')
        run: |
          MODULE_PATH=anan-cloudadviced/anan-platformserver
          MODULE_NAME=$(grep 'artifactId=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          MODULE_VERSION=$(grep 'version=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      # 创建anan-zuulgateway
      - name: Docker build and push anan-zuulgateway
        if: contains(env.MODIFY_FILES,'anan-cloudadviced/anan-zuulgateway/') || contains(env.MODIFY_FILES,'anan-cloudadviced/pom.xml') || contains(env.MODIFY_FILES,'anan-cloudadviced/anan-cloudresource/') || contains(env.MODULE_LIST,'anan-cloud')
        run: |
          MODULE_PATH=anan-cloudadviced/anan-zuulgateway
          MODULE_NAME=$(grep 'artifactId=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          MODULE_VERSION=$(grep 'version=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      # 创建anan-sbaserver
      - name: Docker build and push anan-sbaserver
        if: contains(env.MODIFY_FILES,'anan-cloudadviced/anan-sbaserver/') || contains(env.MODIFY_FILES,'anan-cloudadviced/pom.xml') || contains(env.MODULE_LIST,'anan-cloud')
        run: |
          MODULE_PATH=anan-cloudadviced/anan-sbaserver
          MODULE_NAME=$(grep 'artifactId=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          MODULE_VERSION=$(grep 'version=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      # 创建anan-eurekaserver
      - name: Docker build and push anan-eurekaserver
        if: contains(env.MODIFY_FILES,'anan-eurekaserver/') || contains(env.MODULE_LIST,'anan-cloud')
        run: |
          MODULE_PATH=anan-eurekaserver
          MODULE_NAME=$(grep 'artifactId=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          MODULE_VERSION=$(grep 'version=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
      # 创建anan-configserver
      - name: Docker build and push anan-configserver
        if: contains(env.MODIFY_FILES,'anan-configserver/') || contains(env.MODULE_LIST,'anan-cloud')
        run: |
          MODULE_PATH=anan-configserver
          MODULE_NAME=$(grep 'artifactId=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          MODULE_VERSION=$(grep 'version=' $MODULE_PATH/target/maven-archiver/pom.properties | awk -F '=' '{ print $2 }')
          docker build ./$MODULE_PATH -t ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/Dockerfile
          docker push ${{ env.DOCKER_MIRROR_SERVER }}/${{ env.DOCKER_MIRROR_NS }}/$MODULE_NAME:$MODULE_VERSION
