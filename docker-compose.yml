version: '3'
services:
  mysql-mgr:
    network_mode: host
    container_name: mysql-mgr
    hostname: mysql-mgr
    restart: always
    image: registry.cn-hongkong.aliyuncs.com/fosin/mysql:3.0.0
    #    build:
    #      context: deploy/mysql/leader
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=local
      - MYSQL_REPLICATION_USER=anan_ru
      - MYSQL_REPLICATION_PASSWORD=local
      - MYSQL_DATABASE=nacos
      - MYSQL_USER=nacos
      - MYSQL_PASSWORD=local
    volumes:
      - /data/mysql-mgr0:/var/lib/mysql
      - /data/logs/mysql-mgr0:/var/log/mysql
  #    ports:
  #      - "3306:3306"
  nacos:
    image: nacos/nacos-server:1.4.2
    container_name: nacos
    hostname: nacos
    restart: always
    network_mode: host
    environment:
      - TZ=Asia/Shanghai
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql-mgr
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=nacos
      - MYSQL_SERVICE_USER=nacos
      - MYSQL_SERVICE_PASSWORD=local
      - JVM_XMS=512M
      - JVM_XMX=512M
      - JVM_XMN=170M
      - JVM_MS=160M
      - JVM_MMS=160M
    volumes:
      - /data/logs/nacos0/:/home/nacos/logs
      - /data/nacos0/:/home/nacos/data
    depends_on:
      - mysql-mgr

  rabbitmq:
    network_mode: host
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=anan
      - RABBITMQ_DEFAULT_PASS=local
      - RABBITMQ_DEFAULT_VHOST=/
      - TZ=Asia/Shanghai
    volumes: #TODO 启动后报错cookie file /var/lib/rabbitmq/.erlang.cookie must be accessible by owner only
      - /data/rabbitmq0:/var/lib/rabbitmq
    restart: always
  #    ports:
  #      - 15672:15672
  #      - 5672:5672

  anan-vue:
    network_mode: host
    container_name: anan-vue
    image: registry.cn-hongkong.aliyuncs.com/fosin/anan-vue:3.6.0
    hostname: anan-vue
    restart: always
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /data/nginx/:/etc/nginx/conf.d/
    #    ports:
    #      - 80:80
    depends_on:
      - nacos

  redis:
    network_mode: host
    image: redis:5.0
    container_name: redis
    hostname: redis
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /data/redis0:/data
    restart: always
    #    ports:
    #      - 6379:6379
    command: redis-server --appendonly yes --requirepass local

  anan-authserver:
    network_mode: host
    image: registry.cn-hongkong.aliyuncs.com/fosin/anan-authserver:3.1.0-SNAPSHOT
#    entrypoint: 'sh /anan/wait-for.sh nacos:8848 -t 3600 -- /anan/entrypoint.sh'
    container_name: anan-authserver
    hostname: anan-authserver
    restart: always
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx200M -XX:MaxMetaspaceSize=160M -XX:MetaspaceSize=160M -XX:+DisableExplicitGC -XX:ErrorFile=/logs/hs_err_pid%p.log
      - spring.cloud.kubernetes.enabled=false
      - spring.cloud.nacos.config.enabled=true
      - spring.cloud.nacos.discovery.enabled=true
      #    ports:
      #      - 6140:6140
      #    volumes:
      #- /data/logs/anan:/logs
    depends_on:
      - rabbitmq
      - redis
      - mysql-mgr
      - nacos

  anan-cloudgateway:
    network_mode: host
    image: registry.cn-hongkong.aliyuncs.com/fosin/anan-cloudgateway:3.1.0-SNAPSHOT
    entrypoint: 'sh /anan/wait-for.sh anan-platformserver:6150 -t 3600 -- /anan/entrypoint.sh'
    container_name: anan-cloudgateway
    hostname: anan-cloudgateway
    restart: always
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx200M -XX:MaxMetaspaceSize=160M -XX:MetaspaceSize=160M -XX:+DisableExplicitGC -XX:ErrorFile=/logs/hs_err_pid%p.log
      - spring.cloud.kubernetes.enabled=false
      - spring.cloud.nacos.config.enabled=true
      - spring.cloud.nacos.discovery.enabled=true
    depends_on:
      - rabbitmq
      - nacos

  anan-platformserver:
    network_mode: host
    image: registry.cn-hongkong.aliyuncs.com/fosin/anan-platformserver:3.1.0-SNAPSHOT
    container_name: anan-platformserver
    hostname: anan-platformserver
    restart: always
    privileged: true
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx200M -XX:MaxMetaspaceSize=160M -XX:MetaspaceSize=160M -XX:+DisableExplicitGC -XX:ErrorFile=/logs/hs_err_pid%p.log
      - spring.cloud.kubernetes.enabled=false
      - spring.cloud.nacos.config.enabled=true
      - spring.cloud.nacos.discovery.enabled=true
      #    volumes:
      #- /data/logs/anan:/logs
    depends_on:
      - rabbitmq
      - redis
      - mysql-mgr
      - nacos

  anan-sbaserver:
    network_mode: host
    image: registry.cn-hongkong.aliyuncs.com/fosin/anan-sbaserver:3.1.0-SNAPSHOT
    entrypoint: 'sh /anan/wait-for.sh anan-cloudgateway:6190 -t 3600 -- /anan/entrypoint.sh'
    container_name: anan-sbaserver
    hostname: anan-sbaserver
    restart: always
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx200M -XX:MaxMetaspaceSize=160M -XX:MetaspaceSize=160M -XX:+DisableExplicitGC -XX:ErrorFile=/logs/hs_err_pid%p.log
      - spring.cloud.kubernetes.enabled=false
      - spring.cloud.nacos.config.enabled=true
      - spring.cloud.nacos.discovery.enabled=true
    depends_on:
      - rabbitmq
      - redis
      - nacos

  anan-eurekaserver:
    network_mode: host
    image: registry.cn-hongkong.aliyuncs.com/fosin/anan-eurekaserver:3.1.0-SNAPSHOT
    container_name: anan-eurekaserver
    hostname: anan-eurekaserver
    restart: always
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx200M -XX:MaxMetaspaceSize=160M -XX:MetaspaceSize=160M -XX:+DisableExplicitGC -XX:ErrorFile=/logs/hs_err_pid%p.log
      - spring.cloud.kubernetes.enabled=false
      - spring.cloud.nacos.config.enabled=true
      - spring.cloud.nacos.discovery.enabled=true
  anan-configserver:
    network_mode: host
    image: registry.cn-hongkong.aliyuncs.com/fosin/anan-configserver:3.1.0-SNAPSHOT
    entrypoint: 'sh /anan/wait-for.sh anan-eurekaserver:6100 -t 3600 -- /anan/entrypoint.sh'
    container_name: anan-configserver
    hostname: anan-configserver
    restart: always
    environment:
      - JAVA_TOOL_OPTIONS=-Xmx200M -XX:MaxMetaspaceSize=160M -XX:MetaspaceSize=160M -XX:+DisableExplicitGC -XX:ErrorFile=/logs/hs_err_pid%p.log
      - spring.cloud.config.server.native.search-locations=file:/anan-conf
      - spring.cloud.kubernetes.enabled=false
      - spring.cloud.nacos.config.enabled=true
      - spring.cloud.nacos.discovery.enabled=true
      #    volumes:
      #- /data/logs/anan:/logs
      - /data/anan-conf:/anan-conf
    depends_on:
      - anan-eurekaserver
      - rabbitmq

  filebeat:
    network_mode: host
    image: elastic/filebeat:6.8.6
    container_name: filebeat
    hostname: filebeat
    restart: always
    user: root
    volumes:
      - /data/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /data/filebeat/logs/filebeat:/logs:ro
    #    environment:
    #      - output.elasticsearch.hosts=["elasticsearch:9200"]
    #      - output.logstash.enabled=false
    #      - setup.kibana.host=kibana:5601
    # disable strict permission checks
    command: ['--strict.perms=false']
    depends_on:
      - elasticsearch

  kibana:
    network_mode: host
    image: kibana:6.8.6
    container_name: kibana
    hostname: kibana
    restart: always
    environment:
      - I18N_LOCALE=zh-CN
      #      -SERVER_NAME=kibana.example.org
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  elasticsearch:
    network_mode: host
    image: elasticsearch:6.8.6
    container_name: elasticsearch
    hostname: elasticsearch
    restart: always
    environment:
      #      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms1G -Xmx1G'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /data/elasticsearch/data:/usr/share/elasticsearch/data

  zipkin:
    network_mode: host
    image: openzipkin/zipkin:2
    container_name: zipkin
    hostname: zipkin
    restart: always
    environment:
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=elasticsearch
      #      - RABBIT_CONNECTION_TIMEOUT=60000
      #      - RABBIT_VIRTUAL_HOST=/
      #      - RABBIT_USE_SSL=false
      #      - RABBIT_QUEUE=zipkin
      # Uncomment to see requests to and from elasticsearch
      # - ES_HTTP_LOGGING=BODY
      - RABBIT_ADDRESSES=rabbitmq:5672
      - RABBIT_USER=anan
      - RABBIT_PASSWORD=local
    depends_on:
      - elasticsearch
      - rabbitmq

  mongodb:
    network_mode: host
    image: mongo:3.4
    container_name: mongodb
    hostname: mongodb
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_ROOT_USERNAME=anan
      - MONGO_INITDB_ROOT_PASSWORD=local
    volumes:
      - /data/mongodb/db:/data/db
    restart: always

  prometheus:
    network_mode: host
    image: prom/prometheus
    container_name: prometheus
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    #      - /data/prometheus/data:/prometheus TODO 不能挂载外部目录，报错
    restart: always
    privileged: true
    depends_on:
      - cadvisor
      - node-exporter

  node-exporter:
    network_mode: host
    container_name: node-exporter
    image: prom/node-exporter
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - NODE_ID={{.Node.ID}}
    cap_add:
      - SYS_TIME
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'

  grafana:
    network_mode: host
    image: grafana/grafana:6.1.3
    container_name: grafana
    hostname: grafana
    volumes:
      - /data/grafana:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=http://grafana.server.name
      - GF_SECURITY_ADMIN_PASSWORD=local
      - GF_USERS_ALLOW_SIGN_UP='false'
    restart: always

  cadvisor:
    network_mode: host
    image: google/cadvisor
    container_name: cadvisor
    hostname: cadvisor
    environment:
      - TZ=Asia/Shanghai
    restart: always
    privileged: true
    volumes:
      - /dev/disk/:/dev/disk:ro
      - /cgroup:/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro

  alertmanager:
    network_mode: host
    image: prom/alertmanager
    container_name: alertmanager
    hostname: alertmanager
    restart: always
    ports:
      - 9093:9093
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-devops-alerts}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
  #    volumes:
  #      - /data/alertmanager/data:/alertmanager
  #    - /data/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml

  unsee:
    network_mode: host
    container_name: unsee
    hostname: unsee
    image: cloudflare/unsee:v0.8.0
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - 'ALERTMANAGER_URIS=default:http://alertmanager:9093'

  postgresql:
    network_mode: host
    image: postgres
    container_name: postgresql
    hostname: postgresql
    restart: always
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar

  sonarqube:
    network_mode: host
    image: sonarqube
    container_name: sonarqube
    hostname: sonarqube
    restart: always
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgresql:5432/sonar
    depends_on:
      - postgresql

  nacos-mysql:
    network_mode: host
    container_name: nacos-mysql
    hostname: nacos-mysql
    image: nacos/nacos-mysql:5.7
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=local
      - MYSQL_DATABASE=nacos
      - MYSQL_USER=nacos
      - MYSQL_PASSWORD=local
      - MYSQL_SERVICE_PORT=3308
    volumes:
      - /data/mysql/nacos:/var/lib/mysql

  phpredisadmin:
    network_mode: host
    image: erikdubbelboer/phpredisadmin
    environment:
      - TZ=Asia/Shanghai
      - ADMIN_USER=admin
      - ADMIN_PASS=local
      - REDIS_1_AUTH=local
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
